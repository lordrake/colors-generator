{"version":3,"sources":["utils.js","SingleColor.js","App.js","index.js"],"names":["componentToHex","c","hex","toString","length","rgbToHex","r","g","b","SingleColor","rgb","weight","index","hexColor","useState","alert","setAlert","bcg","join","useEffect","timeout","setTimeout","clearTimeout","className","style","backgroundColor","onClick","navigator","clipboard","writeText","App","color","setColor","error","setError","Values","all","list","setList","onSubmit","e","preventDefault","colors","console","log","type","value","onChange","target","placeholder","map","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LAAA,SAASA,EAAeC,GACtB,IAAIC,EAAMD,EAAEE,SAAS,IACrB,OAAsB,IAAfD,EAAIE,OAAe,IAAMF,EAAMA,EAOzBG,MAJf,SAAkBC,EAAGC,EAAGC,GACtB,MAAO,IAAMR,EAAeM,GAAKN,EAAeO,GAAKP,EAAeQ,ICqBvDC,EAxBK,SAAC,GAAsC,IAAD,EAAnCC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAAe,EAC9BC,oBAAS,GADqB,mBACjDC,EADiD,KAC1CC,EAD0C,KAElDC,EAAMP,EAAIQ,KAAK,KACfhB,EAAG,qBAAOW,UAAP,QAAqBR,EAAQ,WAAR,cAAYK,IAQ1C,OAPAS,qBAAU,WACR,IAAMC,EAAUC,YAAW,WACzBL,GAAS,KACR,KACH,OAAO,kBAAMM,aAAaF,MACzB,CAACL,IAEG,6BACLQ,UAAS,gBAAWX,EAAQ,IAAM,eAClCY,MAAO,CAAEC,gBAAgB,OAAD,OAASR,EAAT,MACxBS,QAAS,WACPV,GAAS,GACTW,UAAUC,UAAUC,UAAU3B,KAEhC,uBAAGqB,UAAU,iBAAiBZ,EAA9B,KACA,uBAAGY,UAAU,eAAerB,GAC3Ba,GAAS,uBAAGQ,UAAU,SAAb,yB,gBCkBCO,MApCf,WAAgB,IAAD,EACahB,mBAAS,IADtB,mBACNiB,EADM,KACCC,EADD,OAEalB,oBAAS,GAFtB,mBAENmB,EAFM,KAECC,EAFD,OAGWpB,mBAAS,IAAIqB,IAAO,WAAWC,IAAI,KAH9C,mBAGNC,EAHM,KAGAC,EAHA,KAkBb,OACE,oCACE,6BAASf,UAAU,aACjB,+CACA,0BAAMgB,SAjBS,SAACC,GACpBA,EAAEC,iBAEF,IACE,IAAIC,EAAS,IAAIP,IAAOJ,GAAOK,IAAI,IACnCE,EAAQI,GACR,MAAOT,GACPC,GAAS,GACTS,QAAQC,IAAI,QAASX,MAUjB,2BAAOY,KAAK,OAAOC,MAAOf,EAAOgB,SAAU,SAACP,GAAD,OAAOR,EAASQ,EAAEQ,OAAOF,QAAQvB,UAAS,UAAKU,EAAQ,QAAU,KAAvB,KAAgCgB,YAAY,YACjI,4BAAQ1B,UAAU,MAAMsB,KAAK,UAA7B,cAGJ,6BAAStB,UAAU,UAChBc,EAAKa,KAAI,SAACnB,EAAOnB,GAChB,OAAO,kBAAC,EAAD,eAAauC,IAAKvC,GAAWmB,EAA7B,CAAoClB,SAAUkB,EAAM7B,IAAKU,MAAOA,WC7BjFwC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.1b3fe324.chunk.js","sourcesContent":["function componentToHex(c) {\r\n  var hex = c.toString(16);\r\n  return hex.length === 1 ? '0' + hex : hex;\r\n}\r\n\r\nfunction rgbToHex(r, g, b) {\r\n  return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\r\n}\r\n\r\nexport default rgbToHex;\r\n","import React, { useState, useEffect } from 'react'\r\nimport rgbToHex from './utils'\r\n\r\nconst SingleColor = ({ rgb, weight, index, hexColor }) => {\r\n  const [alert, setAlert] = useState(false);\r\n  const bcg = rgb.join(',');\r\n  const hex = `#${hexColor}` ?? rgbToHex(...rgb);\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      setAlert(false);\r\n    }, 3000);\r\n    return () => clearTimeout(timeout);\r\n  }, [alert]);\r\n\r\n  return <article\r\n    className={`color ${index > 10 && 'color-light'}`}\r\n    style={{ backgroundColor: `rgb(${bcg})` }}\r\n    onClick={() => {\r\n      setAlert(true);\r\n      navigator.clipboard.writeText(hex);\r\n    }}>\r\n    <p className='percent-value'>{weight}%</p>\r\n    <p className='color-value'>{hex}</p>\r\n    {alert && <p className='alert'>Copied to clipboard</p>}\r\n  </article >\r\n}\r\n\r\nexport default SingleColor\r\n","import React, { useState } from 'react'\r\nimport SingleColor from './SingleColor'\r\n\r\nimport Values from 'values.js'\r\n\r\nfunction App() {\r\n  const [color, setColor] = useState('');\r\n  const [error, setError] = useState(false);\r\n  const [list, setList] = useState(new Values('#f15025').all(10));\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      let colors = new Values(color).all(10);\r\n      setList(colors);\r\n    } catch (error) {\r\n      setError(true);\r\n      console.log('error', error);\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section className=\"container\">\r\n        <h3>Color generator</h3>\r\n        <form onSubmit={handleSubmit}>\r\n          <input type=\"text\" value={color} onChange={(e) => setColor(e.target.value)} className={`${error ? 'error' : null} `} placeholder=\"#f15025\" />\r\n          <button className=\"btn\" type=\"submit\">Generate</button>\r\n        </form>\r\n      </section>\r\n      <section className=\"colors\">\r\n        {list.map((color, index) => {\r\n          return <SingleColor key={index} {...color} hexColor={color.hex} index={index} />\r\n        })}\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}